<?xml version="1.0"?>
<robot name="gillou_bot" xmlns:xacro="http://ros.org/wiki/xacro">


<!-- Define robot constants -->
<xacro:property name="base_width" value="0.31"/>
<xacro:property name="base_length" value="0.42"/>
<xacro:property name="base_height" value="0.18"/>

<xacro:property name="rot_joint_width" value="0.03"/>
<xacro:property name="rot_joint_radius" value="0.02"/>


<xacro:property name="arm_width" value="0.01"/>
<xacro:property name="arm_length" value="0.40"/>
<xacro:property name="arm_height" value="0.06"/>


<xacro:property name="hook_width" value="0.33"/>
<xacro:property name="hook2_width" value="0.30"/>
<xacro:property name="hook_radius" value="0.01"/>

<xacro:property name="door_width" value="0.50"/>
<xacro:property name="door_length" value="0.02"/>
<xacro:property name="door_height" value="0.15"/>


<xacro:property name="wheel_radius" value="0.10"/>
<xacro:property name="wheel_width" value="0.04"/>
<xacro:property name="wheel_ygap" value="0.025"/>
<xacro:property name="wheel_zoff" value="0.05"/>
<xacro:property name="wheel_xoff" value="0.12"/>
<xacro:property name="caster_xoff" value="0.14"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

<gazebo reference="drivewhl_r_link">
    <visual>  
    <material>  
      <ambient>0.  0.  0. 1.0</ambient>  
      <diffuse>0.  0.  0. 1.0</diffuse>  
      <specular>0.  0.  0. 1.0</specular>  
      <emissive>0.  0.  0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>

  <gazebo reference="drivewhl_l_link">
    <visual>  
    <material>  
      <ambient>0.  0.  0. 1.0</ambient>  
      <diffuse>0.  0.  0. 1.0</diffuse>  
      <specular>0.  0.  0. 1.0</specular>  
      <emissive>0.  0.  0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>



  <!-- Robot Base -->
  <gazebo reference="base_link">
    <visual>  
    <material>  
      <ambient> 0.827 0.431 0.439 1.0</ambient>  
      <diffuse> 0.827 0.431 0.439 1.0</diffuse>  
      <specular>0.827 0.431 0.439 1.0</specular>  
      <emissive>0.827 0.431 0.439 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>

  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>

        <box size="${base_length} ${base_width} ${base_height}"/>
        <!--<mesh filename="package://gillou/description_inventor/robot.dae"/>-->
      </geometry>
   <!--   <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>-->
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

<!-- Robot Footprint -->
  <link name="base_footprint"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

<!-- Robot Left Arm -->
  <gazebo reference="left_arm_link">
    <visual>  
    <material>  
      <ambient>0.  0.4  0. 1.0</ambient>  
      <diffuse>0.  0. 0. 1.0</diffuse>  
      <specular>0.  0.4  0. 1.0</specular>  
      <emissive>0.  0.4 0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>

<link name="left_arm_link">
    <visual>
      <geometry>
        <box size="${arm_length} ${arm_width} ${arm_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${arm_length} ${arm_width} ${arm_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="0.01" w="${arm_width}" d="${arm_length}" h="${arm_height}"/>
  </link>
  
 <joint name="left_arm_joint" type="fixed">
  <parent link="base_link"/>
  <child link="left_arm_link"/>
  <origin xyz="0.30 0.20 -0.06" rpy="0 0 0.5"/>
</joint>

<!-- Robot Right Arm -->
  <gazebo reference="right_arm_link">
    <visual>  
    <material>  
      <ambient>0.  0.4  0. 1.0</ambient>  
      <diffuse>0.  0.4 0. 1.0</diffuse>  
      <specular>0.  0.4  0. 1.0</specular>  
      <emissive>0.  0.4 0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>

<link name="right_arm_link">
    <visual>
      <geometry>
        <box size="${arm_length} ${arm_width} ${arm_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${arm_length} ${arm_width} ${arm_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="0.01" w="${arm_width}" d="${arm_length}" h="${arm_height}"/>
  </link>
  
 <joint name="right_arm_joint" type="fixed">
  <parent link="base_link"/>
  <child link="right_arm_link"/>
  <origin xyz="0.30 -0.20 -0.06" rpy="0 0 -0.5"/>
</joint>

<!-- Robot First Hook -->
  <gazebo reference="first_hook_link">
    <visual>  
    <material>  
      <ambient>0.  0.4  0. 1.0</ambient>  
      <diffuse>0.  0.4 0. 1.0</diffuse>  
      <specular>0.  0.4  0. 1.0</specular>  
      <emissive>0.  0.4 0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>

<link name="first_hook_link">
    <visual>
      <geometry>

       <cylinder radius="${hook_radius}" length="${hook_width}"/>
       <!--<mesh filename="package://gillou/description_inventor/pelle.dae"/>-->
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material> -->

    </visual>
    <collision>
      <geometry>
        <cylinder radius="${hook_radius}" length="${hook_width}"/>
      </geometry>
    </collision>

    <xacro:cylinder_inertia m="0.01" r="${hook_radius}" h="${hook_width}"/>
  </link>
  
 <joint name="first_hook_joint" type="fixed">
  <origin xyz="0.16 0.06 0" rpy="${-pi/2} 0 -1.2"/>
      <parent link="rot_joint_link"/>
      <child link="first_hook_link"/>
</joint>


<!-- Robot Second Hook -->
  <gazebo reference="second_hook_link">
    <visual>  
    <material>  
      <ambient>0.  0.4  0. 1.0</ambient>  
      <diffuse>0.  0.4 0. 1.0</diffuse>  
      <specular>0.  0.4  0. 1.0</specular>  
      <emissive>0.  0.4 0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>

<link name="second_hook_link">
    <visual>
      <geometry>
       <cylinder radius="${hook_radius}" length="${hook2_width}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${hook_radius}" length="${hook_width}"/>
      </geometry>
    </collision>

    <xacro:cylinder_inertia m="0.01" r="${hook_radius}" h="${hook_width}"/>
  </link>
  
 <joint name="second_hook_joint" type="fixed">
  <origin xyz="0.15 0 0.20" rpy="0 -1.8 0"/>
      <parent link="first_hook_link"/>
      <child link="second_hook_link"/>
</joint>


<!-- Robot Door -->
  <gazebo reference="door_link">
    <visual>  
    <material>  
      <ambient>0.  0.4  0. 1.0</ambient>  
      <diffuse>0.  0.4 0. 1.0</diffuse>  
      <specular>0.  0.4  0. 1.0</specular>  
      <emissive>0.  0.4 0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>
<link name="door_link">
    <visual>
      <geometry>

        <box size="${door_length} ${door_width} ${door_height}" />
        <!-- <mesh filename="file://$(find gillou)/src/description/pelle.dae" scale="0.01 0.01 0.01"
        /> -->

      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${door_length} ${door_width} ${door_height}"/>
      </geometry>
    </collision>


    <xacro:box_inertia m="0.01" w="${door_width}" d="${door_length}" h="${door_height}"/>

    
  </link>
  
 <joint name="door_joint" type="fixed">
  <parent link="second_hook_link"/>
  <child link="door_link"/>
  <origin xyz="0 0 -0.15" rpy="0 0.5 0"/>
</joint>

<!-- Robot Rot Joint -->
<link name="rot_joint_link">
    <visual>

      <!-- <pose>10 10 10 10 10 5></pose> -->
      <origin xyz="0.26 -0.135 -0.15" rpy="0 3.14 -1.48"/>
      <geometry>
        <!--<cylinder radius="${rot_joint_radius}" length="${rot_joint_width}" />-->
        <!--<mesh filename="file://$(find gillou)/src/description/description_inventor/pelle.dae" scale="0.01 0.01 0.01" />-->

      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${rot_joint_radius}" length="${rot_joint_width}"/>
      </geometry>
    </collision>

    <xacro:cylinder_inertia m="0.01" r="${rot_joint_radius}" h="${rot_joint_width}"/>
  </link>

  
 <joint name="rot_joint_joint" type="fixed">
  <origin xyz="0 0 0" rpy="${pi/2} -0.5 0"/>
      <parent link="pelle_l_link"/>
      <child link="rot_joint_link"/>
      
      
      
</joint>


<!-- Wheels -->

  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
          <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="2" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  
<!-- Wheels-pelle -->

   <xacro:macro name="wheel_pelle" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      
          
      <xacro:cylinder_inertia m="0.1" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="0.10 0 0.1" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

  </xacro:macro>

  <xacro:wheel_pelle prefix="pelle_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel_pelle prefix="pelle_r" x_reflect="-1" y_reflect="-1" />
  
 <!-- Caster Wheel -->
  <gazebo reference="front_caster_l">
    <visual>  
    <material>  
      <ambient>0.  0.  0. 1.0</ambient>  
      <diffuse>0.  0. 0. 1.0</diffuse>  
      <specular>0.  0.  0. 1.0</specular>  
      <emissive>0.  0. 0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>

  <link name="front_caster_l">
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
    </collision>


    <xacro:sphere_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>

  </link>

  <joint name="caster_joint_l" type="continuous">
    <parent link="base_link"/>
    <child link="front_caster_l"/>
    <origin xyz="${caster_xoff} ${(0.5*base_width)/2} ${-(base_height/2)}" rpy="0 0 0"/>
  </joint>

    <gazebo reference="front_caster_r">
    <visual>  
    <material>  
      <ambient>0.  0.  0. 1.0</ambient>  
      <diffuse>0.  0. 0. 1.0</diffuse>  
      <specular>0.  0.  0. 1.0</specular>  
      <emissive>0.  0. 0. 1.0</emissive>  
    </material>  
    </visual>
  </gazebo>

    <link name="front_caster_r">
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
  </link>

    <joint name="caster_joint_r" type="continuous">
    <parent link="base_link"/>
    <child link="front_caster_r"/>
    <origin xyz="${caster_xoff} ${-(0.5*base_width)/2} ${-(base_height/2)}" rpy="0 0 0"/>
  </joint>


<link name="imu_link">
  <visual>
    <geometry>
      <box size="0.1 0.1 0.1"/>
    </geometry>
  </visual>

  <collision>
    <geometry>
      <box size="0.1 0.1 0.1"/>
    </geometry>
  </collision>

  <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>
</link>

<joint name="imu_joint" type="fixed">
  <parent link="base_link"/>
  <child link="imu_link"/>
  <origin xyz="0 0 0.01"/>
</joint>

 <gazebo reference="imu_link">
  <sensor name="imu_sensor" type="imu">
   <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
      <ros>
        <namespace>/demo</namespace>
        <remapping>~/out:=imu</remapping>
      </ros>
      <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <visualize>true</visualize>
    <imu>
      <angular_velocity>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </z>
      </angular_velocity>
      <linear_acceleration>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </z>
      </linear_acceleration>
    </imu>
  </sensor>
</gazebo>

<gazebo>
  <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
    <ros>
      <namespace>/demo</namespace>
    </ros>

    <!-- wheels -->
    <left_joint>drivewhl_l_joint</left_joint>
    <right_joint>drivewhl_r_joint</right_joint>

    <!-- kinematics -->
    <wheel_separation>0.45</wheel_separation>
    <wheel_diameter>0.2</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>6</max_wheel_torque>
    <max_wheel_acceleration>2.0</max_wheel_acceleration>

    <!-- output -->
    <publish_odom>true</publish_odom>
    <publish_odom_tf>false</publish_odom_tf>
    <publish_wheel_tf>true</publish_wheel_tf>

    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_link</robot_base_frame>
  </plugin>
</gazebo>

<gazebo>
  <plugin name='diff_drive1' filename='libgazebo_ros_diff_drive.so'>
    <ros>
      <namespace>/demo_pelle</namespace>
    </ros>

    <!-- wheels -->
    <left_joint>pelle_l_joint</left_joint>
    <right_joint>pelle_r_joint</right_joint>

    <!-- kinematics -->
    <wheel_separation>0.45</wheel_separation>
    <wheel_diameter>0.2</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>6</max_wheel_torque>
    <max_wheel_acceleration>2.0</max_wheel_acceleration>

    <!-- output -->
    <publish_odom>true</publish_odom>
    <publish_odom_tf>false</publish_odom_tf>
    <publish_wheel_tf>true</publish_wheel_tf>

    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_link</robot_base_frame>
  </plugin>
</gazebo>


<link name="camera_link">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.015 0.130 0.022"/>
    </geometry>
  </visual>

  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.015 0.130 0.022"/>
    </geometry>
  </collision>

  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.035"/>
    <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
  </inertial>
</link>

<joint name="camera_joint" type="fixed">
  <parent link="base_link"/>
  <child link="camera_link"/>
  <origin xyz="0.215 0 0.05" rpy="0 0 0"/>
</joint>

<link name="camera_depth_frame"/>

<joint name="camera_depth_joint" type="fixed">
  <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  <parent link="camera_link"/>
  <child link="camera_depth_frame"/>
</joint>

<gazebo reference="camera_link">
  <sensor name="depth_camera" type="depth">
    <visualize>true</visualize>
    <update_rate>30.0</update_rate>
    <camera name="camera">
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <frame_name>camera_depth_frame</frame_name>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0</distortionK1>
      <distortionK2>0</distortionK2>
      <distortionK3>0</distortionK3>
      <distortionT1>0</distortionT1>
      <distortionT2>0</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>

</robot>
